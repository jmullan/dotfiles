#!/bin/bash
VIRTUALENVWRAPPER=$(which virtualenvwrapper.sh)
EXPECTED_VENV=
ACTUAL_VENV=
VENV_FILE=$(find_up .venv)
PYTHONV=""
if [ -n "$VENV_FILE" ] ; then
    EXPECTED_VENV=$(head -n 1 "$VENV_FILE")
    PYTHONV=$(tail -n +2 "$VENV_FILE" | head -n 1)
fi
if [ -n "${PYTHONV}" ] ; then
    if [ -e "${HOME}/.pyenv/versions/${PYTHONV}/bin/python" ] ; then
        VERSION=$("${HOME}/.pyenv/versions/${PYTHONV}/bin/python")
    else
        VERSION=$(glob "${HOME}/.pyenv/versions/${PYTHONV}*/bin/python" | sort -nr | head -n 1)
    fi
fi

if [ -n "${WORKON_HOME}" ] ; then
    AVAILABLE_VENV=$(glob "${WORKON_HOME}/*" | sed 's#.*/##' | grep "${EXPECTED_VENV}")
fi
if [ -n "$VIRTUAL_ENV" ]; then
    # Strip out the path and just leave the env name
    ACTUAL_VENV="${VIRTUAL_ENV##*/}"
fi

if [ -z "${ACTUAL_ENV}${EXPECTED_VENV}" ] ; then
    exit
fi

echo -n ' ('
if [ -z "${VIRTUALENVWRAPPER_SCRIPT}" ] ; then
    if [ -e ~/.virtualenvs ] ; then
        if [ -z "${VIRTUALENVWRAPPER}" ] ; then
            echo -n "$(tput setaf 1)"
            echo -n "sudo pip install virtualenvwrapper"
        else
            echo -n "$(tput setaf 3)"
            echo -n "source ${VIRTUALENVWRAPPER}"
        fi
        echo -n "$(tput sgr0)"
    else
        echo -n "$(tput setaf 1)"
        echo -n "mkdir -p "~/.virtualenvs
        echo -n "$(tput sgr0)"
    fi
else
    if [ -n "${EXPECTED_VENV}" ] ; then
        if [ -n "${ACTUAL_VENV}" ] ; then
            if [ "${ACTUAL_VENV}" == "${EXPECTED_VENV}" ] ; then
                echo -n "venv:$ACTUAL_VENV"
            else
                echo -n "$(tput setaf 1)"
                echo -n "INCORRECT VENV $ACTUAL_VENV : workon $EXPECTED_VENV"
                echo -n "$(tput sgr0)"
            fi
        else
	    if [ -z "${AVAILABLE_VENV}" ] ; then
                echo -n "$(tput setaf 1)"
	        echo -n "mkvirtualenv ${EXPECTED_VENV}"
                if [ -n "${VERSION}" ] ; then
                    echo -n " --python $VERSION"
                fi
                echo -n "$(tput sgr0)"
	    else
                echo -n "$(tput setaf 3)"
                echo -n "workon $EXPECTED_VENV"
                echo -n "$(tput sgr0)"
	    fi
        fi
    else
        if [ -n "${ACTUAL_VENV}" ] ; then
	    if [ -z "${AVAILABLE_VENV}" ] ; then
                echo -n "$(tput setaf 1)"
	        echo -n "mkvirtualenv ${EXPECTED_VENV}"
                if [ -n "${VERSION}" ] ; then
                    echo -n " --python $VERSION"
                fi
                echo -n "$(tput sgr0)"
            else
                echo -n " venv:${ACTUAL_VENV} "
	    fi
        fi
    fi
fi
echo -n ') '
