#!/bin/bash
trap exit SIGHUP SIGINT SIGTERM

GIT_DIR="$(git rev-parse --git-dir 2>/dev/null)"
if [ -z "$GIT_DIR" ] ; then
    echo "No git dir available" >&2
    exit 1
fi

export GC_AUTO=$(git config gc.auto)
export GC_AUTODETACH=$(git config gc.autodetach)
export REMOTE=$(git remote | head -n 1)
if [ -z "${REMOTE}" ] ; then
  echo "No remote available" >&2
  exit 1
fi
restore_settings() {
    git gc
    git prune
    git gc

    git config gc.auto "${GC_AUTO}"
    git config gc.autodetach "${GC_AUTODETACH}"
}

git fetch --all --tags || ( echo "Could not git fetch" >&2 && restore_settings && exit 1 )
git pull --ff-only
git main --refresh
git config gc.auto 0
git config gc.autodetach 0
git remote prune "${REMOTE}"

for branch in $(git branch | awk '"*" != $1 {print $1}'); do
    if [ -n "${MAIN}" ] ; then
        git fetch "${REMOTE}" "${branch}:${branch}" && git fetch "${MAIN}:${REMOTE}"
    else
        git fetch "${REMOTE}" "${branch}:${branch}"
    fi
done

restore_settings
