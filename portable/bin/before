#!/usr/bin/env python-venv
import re
from argparse import ArgumentParser

from jmullanpy.command_helpers import (
    stop_on_broken_pipe_error,
    get_filenames,
    open_file_or_stdin,
    add_filenames_arguments,
)


def search(pattern: re.Pattern, filename: str, inclusive: bool):
    with open_file_or_stdin(filename) as handle:
        for line in handle:
            if pattern.search(line) is not None:
                if inclusive:
                    print(line, end="")
                break
            else:
                print(line, end="")


def main():
    """Try to turn has_key into ` in `."""
    stop_on_broken_pipe_error()
    parser = ArgumentParser()
    parser.add_argument(
        "-v",
        "--verbose",
        dest="verbose",
        action="store_true",
        default=False,
        help="verbose is more verbose",
    )
    parser.add_argument(
        "--inclusive",
        dest="inclusive",
        action="store_true",
        default=False,
        help="include the string we are seeking",
    )
    parser.add_argument(
        "-i",
        "--insensitive",
        "--case-insensitive",
        dest="insensitive",
        action="store_true",
        default=False,
        help="search for the string ignoring case",
    )
    parser.add_argument(
        "-r",
        "--regex",
        dest="regex",
        action="store_true",
        default=False,
        help="treat the search string as a regex",
    )
    parser.add_argument("search", help="what to search for")
    add_filenames_arguments(parser)

    args = parser.parse_args()
    if args.search is None or args.search == "":
        raise ValueError("You must search for a non-empty string")

    if not args.regex:
        regex = re.escape(args.search)
    else:
        regex = args.search
    if args.insensitive:
        pattern = re.compile(regex, re.IGNORECASE)
    else:
        pattern = re.compile(regex)

    for filename in get_filenames(args):
        search(pattern, filename, args.inclusive)


if __name__ == "__main__":
    main()
